AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS AutoStop

Globals:
  Function:
    Timeout: 10

Parameters:
  SlackWebhookUrl:
    Type: String

Resources:
  AutoStopIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: "AutoStopPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "elasticbeanstalk:DescribeEnvironments"
                  - "elasticbeanstalk:DescribeEnvironmentResources"
                  - "elasticbeanstalk:UpdateEnvironment"
                  - "ec2:DescribeInstances"
                  - "ec2:DescribeInstanceStatus"
                  - "ec2:StopInstances"
                  - "rds:DescribeDBClusters"
                  - "rds:StartDBCluster"
                  - "rds:StopDBCluster"
                Resource: "*"
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource:
                  Ref: AutoStopTopic

  AutoStopFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          NOTIFY_ARN: !Ref AutoStopTopic
          SLACK_WEBHOOK_URL: !Ref SlackWebhookUrl
      Role: !GetAtt AutoStopIamRole.Arn
      Events:
        Notify:
          Type: Schedule
          Properties:
            Schedule: cron(0 * * * ? *) # every hour

  AutoStopTopic:
    Type: AWS::SNS::Topic
