AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Check RDS

Globals:
  Function:
    Timeout: 10

Parameters:
  SlackWebhookUrl:
    Type: String
    Default: ""

Resources:
  IamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: "CustomPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "rds:DescribeDBClusters"
                  - "rds:StartDBCluster"
                  - "rds:StopDBCluster"
                Resource: "*"
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource:
                  Ref: Topic

  Function:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          NOTIFY_ARN: !Ref Topic
      Role: !GetAtt IamRole.Arn
      Events:
        Notify:
          Type: Schedule
          Properties:
            Schedule: cron(0 * * * ? *) # every hour

  Topic:
    Type: AWS::SNS::Topic
